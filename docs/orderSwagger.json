{
    "swagger": "2.0",
    "info": {
    "description": "\n
## Releases\n

| Version | Description                                                         |\n
|---------|---------------------------------------------------------------------|\n
| V1.2    | Enhanced GET Operation: return additional order information; 
 Added various validations; Documentation improvements                          |\n
| V1.1    | Added support for auto-update of spend limits: addAdhocBundle
 product order has been updated with the addition of AutoAdjustSpendLimitFlag 
 to authorise adjustment of the temporary spend limit to the ad-hoc bundle cost 
 on add-hoc bundle purchases.                                                   |\n
| V1.0    | Initial release                                                     |\n

## Request Headers\n

The following headers are mandatory:\n\n 

| Header            |        Value                    |\n
|-------------------|---------------------------------|\n
| `Accept`          | application/json                |\n
| `Content-Type`    | application/json                |\n
| `Authorization`   | Basic Base64(username:password) |\n\n 

See the *Authentication and Authorization* chapter for more detail on the 
`Authorization` header value \n\n

Copyright: Telkom SA Ltd",
    "version": "1.2",
    "title": "Order Management"
    },
    "host": "ecdev01api.telkom.co.za",
    "basePath": "/cons-po/ProductOrder/v1",
    "schemes": [
    "https"
    ],
    "consumes": [
    "application/json;charset=utf-8"
    ],
    "produces": [
    "application/json;charset=utf-8"
    ],
    "security": [
    {
    "basicAuth": []
    }
    ],
    "paths": {
    "/productOrder#createDeal": {
    "post": {
    "tags": [
    "Product Order API"
    ],
    "summary": "Creates a product order for a deal",
    "description": "Creates an order for a new service.\n\nInput parameter:\n- externalId: Your reference for this particular order. \n- orderItem.product.id: The ID from the Deal Sheet for the Deal to be ordered.\n- orderItem.product.name: The Name from the Deal Sheet for the Deal to be ordered.\n- orderItem.product.productCharacteristic.Deal.Sim: From Onbiller SIM inventory.\n- orderItem.product.productCharacteristic.Deal.ContractPeriod: The Contract Period from the Deal Sheet for the Deal to be ordered.\n",
    "operationId": "productOrderCreateDeal",
    "parameters": [
    {
    "in": "body",
    "name": "ProductOrder",
    "description": "",
    "required": true,
    "schema": {
    "$ref": "#/definitions/ProductOrderCreateDeal"
    }
    }
    ],
    "responses": {
    "202": {
    "description": "Accepted",
    "schema": {
    "$ref": "#/definitions/ProductOrderCreateDealResponse"
    }
    }
    }
    }
    },
    "/productOrder#cease": {
    "post": {
    "tags": [
    "Product Order API"
    ],
    "summary": "Creates a product order to cease a service",
    "description": "Creates an order to cease or discontinue an existing service.\n\nInput parameter:\n- externalId: Your reference for this particular order. \n- requestedCompletionDate: The required date and time the service should be discontinued.\n- orderItem.product.productCharacteristic.MSISDN: From Onbiller service inventory.\n",
    "operationId": "productOrderCease",
    "parameters": [
    {
    "in": "body",
    "name": "ProductOrder",
    "description": "",
    "required": true,
    "schema": {
    "$ref": "#/definitions/ProductOrderCease"
    }
    }
    ],
    "responses": {
    "202": {
    "description": "Accepted",
    "schema": {
    "$ref": "#/definitions/ProductOrderCeaseResponse"
    }
    }
    },
    "deprecated": false
    }
    },
    "/productOrder#replaceOffer": {
    "post": {
    "tags": [
    "Product Order API"
    ],
    "summary": "Creates a product order to replace an offer",
    "description": "Creates an order to replace an offer on existing service .\n\nInput parameter:\n- externalId: Your reference for this particular order.\n- requestedCompletionDate: The required date and time the new offer should be active on the existing service.\n- orderItem.product.id: The ID from the Deal Sheet for the Deal to be ordered.\n- orderItem.product.name: The Name from the Deal Sheet for the Deal to be ordered.\n- orderItem.product.productCharacteristic.ReplaceOffer.SIM: From Onbiller SIM inventory. Previously used SIM to create the existing service.\n- orderItem.product.productCharacteristic.ReplaceOffer.MSISDN: From Onbiller existing service inventory.\n- orderItem.product.productCharacteristic.Deal.ContractPeriod: The Contract Period from the Deal Sheet for the Deal to be ordered.\n- orderItem.product.productCharacteristic.ReplaceOffer.commitmentPeriod: The Contract Period from the Deal Sheet for offer on existing service.\n- orderItem.product.productCharacteristic.Deal.Sim: From Onbiller SIM inventory.\n",
    "operationId": "productOrderReplaceOffer",
    "parameters": [
    {
    "in": "body",
    "name": "ProductOrder",
    "description": "",
    "required": true,
    "schema": {
    "$ref": "#/definitions/ProductOrderReplaceOffer"
    }
    }
    ],
    "responses": {
    "202": {
    "description": "Accepted",
    "schema": {
    "$ref": "#/definitions/ProductOrderResponse"
    }
    }
    },
    "deprecated": false
    }
    },
    "/productOrder#changeSIM": {
    "post": {
    "tags": [
    "Product Order API"
    ],
    "summary": "Creates a product order to change a SIM on a service",
    "description": "Creates an order to change a SIM on an existing service.\n\nInput parameter:\n- externalId: Your reference for this particular order. \n- orderItem.product.productCharacteristic.Sim: From Onbiller SIM inventory.\n- serviceRef.id:From Onbiller existing service inventory.\n",
    "operationId": "productOrderChangeSIM",
    "parameters": [
    {
    "in": "body",
    "name": "ProductOrder",
    "description": "",
    "required": true,
    "schema": {
    "$ref": "#/definitions/ProductOrderChangeSIM"
    }
    }
    ],
    "responses": {
    "202": {
    "description": "Accepted",
    "schema": {
    "$ref": "#/definitions/ProductOrderChangeSIMResponse"
    }
    }
    }
    }
    },
    "/productOrder#addAdhocBundle": {
    "post": {
    "tags": [
    "Product Order API"
    ],
    "summary": "Creates a product order to add an ad-hoc bundle",
    "description": "Creates an order to add an ad-hoc bundle to an existing service.\n\nInput parameter:\n- externalId: Your reference for this particular order. \n- orderItem.product.id: The ID from the Deal Sheet for the Deal to be ordered.\n- orderItem.product.name: The Name from the Deal Sheet for the Deal to be ordered.\n- orderItem.product.productCharacteristic.MSISDN: From Onbiller existing service inventory.\n\nFor Onbillers where the spend limit is restricted, the AutoAdjustSpendLimitFlag product characteristic can set to \"True\" to authorise the adjustment of the temporary spend limit equal with the ad-hoc bundle cost.\n",
    "operationId": "productOrderAddAdhocBundle",
    "parameters": [
    {
    "in": "body",
    "name": "ProductOrder",
    "description": "",
    "required": true,
    "schema": {
    "$ref": "#/definitions/ProductOrderAddAdhocBundle"
    }
    }
    ],
    "responses": {
    "202": {
    "description": "Accepted"
    }
    }
    }
    },
    "/productOrder/{id}": {
    "get": {
    "tags": [
    "Product Order API"
    ],
    "summary": "Retrieve a product order entity",
    "description": "This operation retrieves product order detail, including status.",
    "operationId": "productOrderGet",
    "parameters": [
    {
    "name": "id",
    "in": "path",
    "description": "Unique identifier of Product Order",
    "required": true,
    "type": "string"
    }
    ],
    "responses": {
    "200": {
    "description": "Success",
    "schema": {
    "$ref": "#/definitions/ProductOrderGet"
    }
    }
    },
    "deprecated": false
    }
    },
    "/productOrderCancellation/{id}": {
    "patch": {
    "tags": [
    "Product Order API"
    ],
    "summary": "Cancel a product order",
    "description": "This operation cancel stuck product order.",
    "operationId": "productOrderCancellation",
    "parameters": [
    {
    "name": "id",
    "in": "path",
    "description": "Unique identifier of Product Order",
    "required": true,
    "type": "string"
    },
    {
    "name": "JsonPatch",
    "in": "body",
    "required": true,
    "schema": {
    "$ref": "#/definitions/ProductOrderCancellation"
    }
    }
    ],
    "responses": {
    "202": {
    "description": "Accept",
    "schema": {
    "$ref": "#/definitions/ProductOrderCancellationResponse"
    }
    }
    },
    "deprecated": false
    }
    }
    },
    "securityDefinitions": {
    "basicAuth": {
    "type": "basic"
    }
    },
    "definitions": {
    "ActionType": {
    "type": "string",
    "description": "The action to be carried out on the product order item. This aligns with the actions made available on the Mass Ordering Web Service. Please refer to the enum values for application action types.",
    "enum": [
    "createDeal",
    "changeMSISDN",
    "changeSIM",
    "changeVAS",
    "renew",
    "migrate",
    "requestPortIn",
    "cease",
    "replace",
    "addAdhocBundle",
    "addRecurringBundle"
    ]
    },
    "StateType": {
    "type": "string",
    "description": "State of order/order item. Please refer to the enum values for applicable product order states.",
    "enum": [
    "acknowledged",
    "rejected",
    "pending",
    "held",
    "inProgress",
    "cancelled",
    "completed",
    "failed",
    "partial"
    ]
    },
    "ProductCharacteristic": {
    "type": "object",
    "required": [
    "name",
    "value"
    ],
    "properties": {
    "name": {
    "type": "string",
    "description": "Name of the product characteristic."
    },
    "value": {
    "type": "string",
    "description": "Characteristic value of the product that is instantiated or modified by the product order. Value is a descriptive structure for product characteristic"
    }
    },
    "description": "Characteristics of the product that is instantiated or to modified as an array of name value pairs."
    },
    "ServiceRef": {
    "type": "object",
    "required": [
    "id",
    "serviceType"
    ],
    "properties": {
    "id": {
    "type": "string",
    "description": "Service number that is associated with service type e.g. the MSISDN for a mobile service type. Currently this structure is specifically used with changeSIM and changeMSISDN order actions."
    },
    "serviceType": {
    "type": "string",
    "description": "Service type related to the service that is being modified e.g. mobile. This section must be specified where an existing service is being modified."
    }
    }
    },
    "RelatedParty": {
    "type": "object",
    "required": [
    "id",
    "firstName",
    "lastName",
    "BirthDate",
    "idType",
    "IdNumber",
    "electronicAddressType",
    "electronicAddressValue"
    ],
    "properties": {
    "id": {
    "type": "string",
    "description": "id of the related party"
    },
    "firstName": {
    "type": "string",
    "description": "First name of the related party"
    },
    "lastName": {
    "type": "string",
    "description": "Last name of the related party"
    },
    "Birthdate": {
    "type": "string",
    "description": "Date of birth of the related party"
    },
    "idType": {
    "type": "string",
    "description": "Identification type of the related party e.g. ID or Passport"
    },
    "idNumber": {
    "type": "string",
    "description": "Identification number, supply ID number when ID type is ID and the passport number when ID type is passport."
    },
    "electronicAddressType": {
    "type": "string",
    "description": "Electronic Address type e.g. email or mobile"
    },
    "electronicAddressValue": {
    "type": "string",
    "description": "The electronic address value e.g. the email address when of type email and the mobile number if of the type mobile"
    }
    },
    "description": "Optional structure provides the details of the related party e.g. the subscriber's detail in order to provide self service functionality to the subscriber linked to the order."
    },
    "Product": {
    "type": "object",
    "properties": {
    "id": {
    "type": "string",
    "description": "Identifier of a product instance. Required to be unique. Used in URIs as the identifier of the product (for modify or delete use cases)."
    },
    "name": {
    "type": "string",
    "description": "Name of the product"
    },
    "productType": {
    "type": "string",
    "description": "Type of the product"
    },
    "productCharacteristic": {
    "type": "array",
    "description": "A list of product characteristics (ProductCharacteristic[*]).A name/value pair list\nused to store instance specific values of attributes. The behavior is equivalent\nto a MAP data structure where only one entry for any given value of \"name\"\ncan exist.",
    "items": {
    "$ref": "#/definitions/ProductCharacteristic"
    }
    },
    "RelatedParty": {
    "$ref": "#/definitions/RelatedParty"
    }
    },
    "description": "Product attributes description"
    },
    "OrderItem": {
    "type": "object",
    "required": [
    "id",
    "product",
    "action"
    ],
    "properties": {
    "id": {
    "type": "string",
    "description": "Identifier of the line item (generally it is a sequence number 01, 02, 03, �)"
    },
    "action": {
    "$ref": "#/definitions/ActionType"
    },
    "state": {
    "$ref": "#/definitions/StateType"
    },
    "product": {
    "$ref": "#/definitions/Product"
    },
    "serviceRef": {
    "$ref": "#/definitions/ServiceRef"
    }
    },
    "description": "An identified part of the order. A product order is decomposed into one or more order items."
    },
    "ProductOrderCease": {
    "type": "object",
    "required": [
    "externalId",
    "orderItem"
    ],
    "properties": {
    "externalId": {
    "type": "string",
    "description": "An identifier that is uniquely understood and identifiable by the customer."
    },
    "requestedCompletionDate": {
    "type": "string",
    "description": "Requested delivery date from the requester perspective"
    },
    "OrderItem": {
    "type": "array",
    "description": "A list of order items (OrderItem [*]). Order items that have to be processed",
    "items": {
    "$ref": "#/definitions/OrderItem"
    }
    }
    },
    "description": "A Product Order is a type of order which can be used to place an order between a customer and a service provider or between a service provider and a partner and vice versa",
    "example": {
    "externalId": "SimulatorRef0002",
    "requestedCompletionDate": "2025-01-29T18:13:59.506Z",
    "orderItem": [
    {
    "action": "cease",
    "product": {
    "productCharacteristic": [
    {
    "name": "MSISDN",
    "value": "0814569876"
    }
    ]
    }
    }
    ]
    }
    },
    "ProductOrderReplaceOffer": {
    "type": "object",
    "required": [
    "externalId",
    "orderItem"
    ],
    "properties": {
    "externalId": {
    "type": "string",
    "description": "An identifier that is uniquely understood and identifiable by the customer."
    },
    "requestedCompletionDate": {
    "type": "string",
    "description": "Requested delivery date from the requester perspective"
    },
    "OrderItem": {
    "type": "array",
    "description": "A list of order items (OrderItem [*]). Order items that have to be processed",
    "items": {
    "$ref": "#/definitions/OrderItem"
    }
    }
    },
    "description": "A Product Order is a type of order which can be used to place an order between a customer and a service provider or between a service provider and a partner and vice versa",
    "example": {
    "externalId": "SimulatorRef0003",
    "requestedCompletionDate": "2025-01-29T18:13:59.506Z",
    "orderItem": [
    {
    "orderItemType": "Deal",
    "action": "replaceOffer",
    "product": {
    "id": "TVC2002289",
    "name": "FreeMe 20GB Deal",
    "productCharacteristic": [
    {
    "name": "ReplaceOffer.SIM",
    "value": "89270200100001700000"
    },
    {
    "name": "ReplaceOffer.MSISDN",
    "value": "0814569876"
    },
    {
    "name": "Deal.contractPeriod",
    "value": "24"
    },
    {
    "name": "ReplaceOffer.commitmentPeriod",
    "value": "24"
    },
    {
    "name": "Deal.SIM",
    "value": "89270200100001905985"
    }
    ]
    }
    }
    ]
    }
    },
    "ProductOrderCreateDeal": {
    "type": "object",
    "required": [
    "externalId",
    "orderItem"
    ],
    "properties": {
    "externalId": {
    "type": "string",
    "description": "An identifier that is uniquely understood and identifiable by the customer."
    },
    "requestedCompletionDate": {
    "type": "string",
    "description": "Requested delivery date from the requester perspective"
    },
    "OrderItem": {
    "type": "array",
    "description": "A list of order items (OrderItem [*]). Order items that have to be processed",
    "items": {
    "$ref": "#/definitions/OrderItem"
    }
    }
    },
    "description": "A Product Order is a type of order which can be used to place an order between a customer and a service provider or between a service provider and a partner and vice versa",
    "example": {
    "externalId": "SimulatorRef0001",
    "requestedCompletionDate": "2025-01-29T18:13:59.506Z",
    "orderItem": [
    {
    "orderItemType": "Deal",
    "action": "createDeal",
    "product": {
    "id": "TMI1909001",
    "name": "Mobile Data 1GB TopUp Deal",
    "productCharacteristic": [
    {
    "name": "Deal.Sim",
    "value": "89270200100001700001"
    },
    {
    "name": "Deal.ContractPeriod",
    "value": "24"
    }
    ]
    }
    }
    ]
    }
    },
    "ProductOrderChangeSIM": {
    "type": "object",
    "required": [
    "externalId",
    "orderItem"
    ],
    "properties": {
    "externalId": {
    "type": "string",
    "description": "An identifier that is uniquely understood and identifiable by the customer."
    },
    "requestedCompletionDate": {
    "type": "string",
    "description": "Requested delivery date from the requester perspective"
    },
    "OrderItem": {
    "type": "array",
    "description": "A list of order items (OrderItem [*]). Order items that have to be processed",
    "items": {
    "$ref": "#/definitions/OrderItem"
    }
    }
    },
    "description": "A Product Order is a type of order which can be used to place an order between a customer and a service provider or between a service provider and a partner and vice versa",
    "example": {
    "externalId": "SimulatorRef0004",
    "orderItem": [
    {
    "action": "changeSIM",
    "product": {
    "productCharacteristic": [
    {
    "name": "Deal.SIM",
    "value": "89270200100001700001"
    },
    {
    "name": "M2MSIMIndicator",
    "value": "Normal"
    }
    ]
    },
    "serviceRef": {
    "id": "0816785432",
    "serviceType": "Mobile"
    }
    }
    ]
    }
    },
    "ProductOrderAddAdhocBundle": {
    "type": "object",
    "required": [
    "externalId",
    "orderItem"
    ],
    "properties": {
    "externalId": {
    "type": "string",
    "description": "An identifier that is uniquely understood and identifiable by the customer."
    },
    "requestedCompletionDate": {
    "type": "string",
    "description": "Requested delivery date from the requester perspective"
    },
    "OrderItem": [
    {
    "type": "array",
    "description": "A list of order items (OrderItem [*]). Order items that have to be processed",
    "items": {
    "$ref": "#/definitions/OrderItem"
    }
    }
    ]
    },
    "description": "A Product Order is a type of order which can be used to place an order between a customer and a service provider or between a service provider and a partner and vice versa",
    "example": {
    "externalId": "SimulatorRef0005",
    "orderItem": [
    {
    "orderItemType": "Bundle",
    "action": "addAdHocBundle",
    "product": {
    "id": "S2318",
    "name": "10GB + 10GB Once-Off",
    "productCharacteristic": [
    {
    "name": "MSISDN",
    "value": "0812005991"
    },
    {
    "name": "AutoAdjustSpendLimitFlag",
    "value": "True"
    }
    ]
    }
    }
    ]
    }
    },
    "ProductOrderGet": {
    "type": "object",
    "properties": {
    "externalId": {
    "type": "string",
    "description": "An identifier that is uniquely understood and identifiable by the customer."
    },
    "productOrderReferenceNumber": {
    "type": "string",
    "description": "Product Order reference number"
    },
    "subscriberStatus": {
    "type": "string",
    "description": "Current subscriber status - Breakdown of applicable statuses TBC"
    }
    },
    "description": "A Product Order is a type of order which can be used to place an order between a customer and a service provider or between a service provider and a partner and vice versa",
    "example": {
    "externalId": "781215195",
    "productOrderReferenceNumber": "871419195A",
    "subscriberStatus": "Active",
    "OrderStatus": "Done",
    "OrderState": "Assigned",
    "CreatedDate": "2022-09-08T14:16:23+0200",
    "DueDate": "2022-09-08T23:59:59+0200",
    "UpdatedDate": "2022-09-08T14:18:08+0200"
    }
    },
    "ProductOrderCancellationResponse": {
    "type": "object",
    "properties": {
    "externalId": {
    "type": "string",
    "description": "An identifier that is uniquely understood and identifiable by the customer."
    },
    "productOrderReferenceNumber": {
    "type": "string",
    "description": "Product Order reference number"
    },
    "orderActionStatus": {
    "type": "string",
    "description": "Current order action status - Breakdown of applicable statuses TBC"
    }
    },
    "description": "A Product Order is a type of order which can be used to place an order between a customer and a service provider or between a service provider and a partner and vice versa",
    "example": {
    "orderID": "3478830145",
    "orderActionID": "3478830146",
    "orderActionStatus": "CA",
    "orderIDReference": "3478830146A",
    "creatorID": "sa",
    "orderActionType": "PR",
    "amendIndicator": "AC",
    "receptionDate": 1663573728000,
    "productStatus": "AC",
    "priority": "50",
    "salesChannel": "CC",
    "dueDate": 1663624799000,
    "projectNumber": "1",
    "orderMode": "DE",
    "ownerID": "TDS",
    "serviceRequiredDate": 1663624799000,
    "apID": "3479298624",
    "orderActionIDReference": "3478830146A",
    "orderActionGroupID": "1",
    "customerID": "529484896",
    "asapflag": false
    }
    },
    "ProductOrderCancellation": {
    "type": "object",
    "properties": {
    "externalId": {
    "type": "string",
    "description": "An identifier that is uniquely understood and identifiable by the customer."
    },
    "productOrderReferenceNumber": {
    "type": "string",
    "description": "Product Order reference number"
    },
    "orderActionStatus": {
    "type": "string",
    "description": "Current order action status - Breakdown of applicable statuses TBC"
    }
    },
    "description": "A Product Order is a type of order which can be used to place an order between a customer and a service provider or between a service provider and a partner and vice versa",
    "example": {
    "action": "CA"
    }
    },
    "ProductOrderCreateDealResponse": {
    "properties": {
    "id": {
    "type": "string",
    "description": "Order management reference id."
    },
    "externalId": {
    "type": "string",
    "description": "An identifier that is uniquely understood and identifiable by the customer."
    },
    "requestedCompletionDate": {
    "type": "string",
    "description": "Requested delivery date from the requester perspective"
    },
    "OrderItem": {
    "type": "array",
    "description": "A list of order items (OrderItem [*]). Order items that have to be processed",
    "items": {
    "$ref": "#/definitions/OrderItem"
    }
    }
    },
    "description": "A Product Order is a type of order which can be used to place an order between a customer and a service provider or between a service provider and a partner and vice versa",
    "example": {
    "id": "OPS2324264",
    "externalId": "CustomerRef0001",
    "orderItem": [
    {
    "product": {
    "productCharacteristic": [
    {
    "name": "MSISDN",
    "value": "0816538765"
    }
    ]
    }
    }
    ]
    }
    },
    "ProductOrderCeaseResponse": {
    "properties": {
    "id": {
    "type": "string",
    "description": "Order management reference id."
    },
    "externalId": {
    "type": "string",
    "description": "An identifier that is uniquely understood and identifiable by the customer."
    }
    },
    "example": {
    "id": "OPS2324264",
    "externalId": "CustomerRef0001"
    }
    },
    "ProductOrderResponse": {
    "properties": {
    "id": {
    "type": "string",
    "description": "Order management reference id."
    },
    "externalId": {
    "type": "string",
    "description": "An identifier that is uniquely understood and identifiable by the customer."
    },
    "requestedCompletionDate": {
    "type": "string",
    "description": "Requested delivery date from the requester perspective"
    },
    "OrderItem": {
    "type": "array",
    "description": "A list of order items (OrderItem [*]). Order items that have to be processed",
    "items": {
    "$ref": "#/definitions/OrderItem"
    }
    }
    },
    "description": "A Product Order is a type of order which can be used to place an order between a customer and a service provider or between a service provider and a partner and vice versa",
    "example": {
    "id": "OPS2324264",
    "externalId": "CustomerRef0001",
    "orderItem": [
    {
    "product": {
    "productCharacteristic": [
    {
    "name": "MSISDN",
    "value": "0816538765"
    }
    ]
    }
    }
    ]
    }
    },
    "ProductOrderChangeSIMResponse": {
    "properties": {
    "id": {
    "type": "string",
    "description": "Order management reference id."
    },
    "externalId": {
    "type": "string",
    "description": "An identifier that is uniquely understood and identifiable by the customer."
    }
    },
    "example": {
    "id": "OPS2324264",
    "externalId": "CustomerRef0001"
    }
    },
    "Error": {
    "properties": {
    "code": {
    "type": "integer",
    "description": "An integer coding the error type.\ne.g. CONS-PO-0002:GetCustomerDetails:1:CONS-PO-0001"
    },
    "reason": {
    "type": "string",
    "description": "A short explanation or the error.\n\ne.g. Authorization error"
    },
    "message": {
    "type": "string",
    "description": "A short localized string that describes the error.     \n\ne.g. 'Authorization Failed: Approved Telkom Onbiller is unauthorized to access this service"
    },
    "status": {
    "type": "string",
    "description": "HTTP response code\n\ne.g. 401:CONS-PO-0002"
    }
    },
    "description": "Error representation that can be expected when an error scenario is encountered. For more technical detail on error representation, please refer to error management, under API documentation section.",
    "example": {
    "code": "CONS-PO-0002:GetCustomerDetails:1:CONS-PO-0001",
    "reason": "Authorization error",
    "message": "Authorization Failed: Approved Telkom Onbiller is unauthorized to access this service",
    "status": "401:CONS-PO-0002"
    }
    }
    }
    }